server:
  port: 8080
  shutdown: graceful
  tomcat:
    connection-timeout: 30s
    max-threads: 200
    min-spare-threads: 10

spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/user_auth_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  redis:
    host: localhost
    port: 6380
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  application:
    name: user-auth-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/user-auth
          jwk-set-uri: http://localhost:8180/realms/user-auth/protocol/openid-connect/certs
  lifecycle:
    timeout-per-shutdown-phase: 30s
  kafka:
    bootstrap-servers: localhost:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.keycloak.userservice.event

keycloak:
  auth-server-url: http://localhost:8181
  realm: user-auth
  resource: user-auth-client
  credentials:
    secret: your-client-secret
  ssl-required: external
  use-resource-role-mappings: true
  bearer-only: true

rate-limit:
  enabled: true
  capacity: 100
  time-window: 60 # seconds

logging:
  level:
    root: INFO
    com.keycloak.userservice: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO 